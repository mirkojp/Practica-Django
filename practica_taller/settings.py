"""
Django settings for practica_taller project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
import environ
from dotenv import load_dotenv
from urllib.parse import urlparse
load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7a#&u+kfmxgo$+9r&m-kb8+ra_(fvg8#_$b@)qft__1)byun(j'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "practica-django-fxpz.onrender.com",
    "localhost", "127.0.0.1",
]


# Application definition

MERCADOPAGO_PUBLIC_KEY_TEST = os.environ.get("MERCADOPAGO_PUBLIC_KEY_TEST")
MERCADOPAGO_ACCESS_TOKEN_TEST = os.environ.get("MERCADOPAGO_ACCESS_TOKEN_TEST")

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "Compras",
    "Direcciones",
    "Productos",
    "Usuarios",
    "rest_framework",
    "rest_framework.authtoken",
    "corsheaders",
    'phonenumber_field',
]

PHONENUMBER_DEFAULT_REGION = "AR"
PHONENUMBER_DB_FORMAT = "E164"


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "corsheaders.middleware.CorsMiddleware",
]

CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://localhost:8000",
    "https://superb-jalebi-af3622.netlify.app",
    "https://practica-django-fxpz.onrender.com",
    "https://importfunko.netlify.app",
    "https://67351f81fcd97c0009b8cf05--neon-pudding-702e02.netlify.app",
    "https://neon-pudding-702e02.netlify.app",
    
]

CSRF_TRUSTED_ORIGINS = [
    "https://neon-pudding-702e02.netlify.app",
    "https://practica-django-fxpz.onrender.com",
]

CSRF_COOKIE_NAME = "csrftoken"
CSRF_COOKIE_HTTPONLY = False
CSRF_COOKIE_SAMESITE = 'None'  
CSRF_COOKIE_SECURE = True
SECURE_CROSS_ORIGIN_OPENER_POLICY = 'same-origin'
SECURE_CROSS_ORIGIN_EMBEDDER_POLICY = 'require-corp'

ROOT_URLCONF = 'practica_taller.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'practica_taller.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


env = environ.Env()
environ.Env.read_env()  # Lee el archivo .env

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': env('DB_NAME'),
        'USER': env('DB_USER'),
        'PASSWORD': env('DB_PASSWORD'),
        'HOST': env('DB_HOST'),
        'PORT': env('DB_PORT'),
    }
}
"""tmpPostgres = urlparse(os.getenv("DATABASE_URL"))
print(tmpPostgres)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',  # Motor de PostgreSQL
        'NAME': tmpPostgres.path[1:],  # Eliminar la barra inicial ("/") en el nombre de la base de datos
        'USER': tmpPostgres.username,
        'PASSWORD': tmpPostgres.password,
        'HOST': tmpPostgres.hostname,
        'PORT': tmpPostgres.port or 5432,  # Si no se especifica el puerto, usar el puerto estándar de PostgreSQL (5432)
        'OPTIONS': {
            'sslmode': 'require',  # Asegura que se use SSL para la conexión
        },
    }
}"""
"""DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}"""

AUTH_USER_MODEL = 'Usuarios.Usuario'

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
